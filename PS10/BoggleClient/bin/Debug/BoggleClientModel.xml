<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BoggleClientModel</name>
    </assembly>
    <members>
        <member name="T:BC.BoggleClientModel">
            <summary>
            The model component of MVC for our Boggle Client. This class provides methods for sending data
            to the boggle server (player name and words found), and for receiving data from the boggle server
            (such as score, time, etc).  When data is received from the server, it is then transmitted to either
            HomePage.xaml.cs or GamePage.xaml.cs through the appropriate event. 
            </summary>
        </member>
        <member name="M:BC.BoggleClientModel.Main">
            <summary>
            Not sure if we need this.
            </summary>
        </member>
        <member name="F:BC.BoggleClientModel.socket">
            <summary>
            The socket used to communicate with the server.  If no connection has been
            made yet, this is null.
            </summary>
        </member>
        <member name="F:BC.BoggleClientModel.client">
            <summary>
            The client associated with this connection to the server. If no connection
            has been made, this is null.
            </summary>
        </member>
        <member name="F:BC.BoggleClientModel.board">
            <summary>
            The 16 characters of the boggle board, as a string
            </summary>
        </member>
        <member name="F:BC.BoggleClientModel.opponentName">
            <summary>
            Opponent name
            </summary>
        </member>
        <member name="F:BC.BoggleClientModel.gameLength">
            <summary>
            Length of this game
            </summary>
        </member>
        <member name="F:BC.BoggleClientModel.playerName">
            <summary>
            Client's name
            </summary>
        </member>
        <member name="F:BC.BoggleClientModel.playerScore">
            <summary>
            Client's score
            </summary>
        </member>
        <member name="F:BC.BoggleClientModel.opponentScore">
            <summary>
            Opponent's score
            </summary>
        </member>
        <member name="M:BC.BoggleClientModel.getBoard">
            <summary>
            Getter for board characters
            </summary>
            <returns></returns>
        </member>
        <member name="M:BC.BoggleClientModel.setBoard(System.String)">
            <summary>
            Setter for board characters
            </summary>
            <param name="b"></param>
        </member>
        <member name="M:BC.BoggleClientModel.getTime">
            <summary>
            Getter for gameLength
            </summary>
            <returns></returns>
        </member>
        <member name="M:BC.BoggleClientModel.setTime(System.String)">
            <summary>
            Setter for gameLength
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:BC.BoggleClientModel.getOpponent">
            <summary>
            Getter for opponent name
            </summary>
            <returns></returns>
        </member>
        <member name="M:BC.BoggleClientModel.setOpponent(System.String)">
            <summary>
            Setter for opponent name
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:BC.BoggleClientModel.getPlayerName">
            <summary>
            Getter for player name
            </summary>
            <returns></returns>
        </member>
        <member name="M:BC.BoggleClientModel.setPlayerName(System.String)">
            <summary>
            Setter for player name
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:BC.BoggleClientModel.getPlayerScore">
            <summary>
            Getter for player score
            </summary>
            <returns></returns>
        </member>
        <member name="M:BC.BoggleClientModel.setPlayerScore(System.String)">
            <summary>
            Setter for player score
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:BC.BoggleClientModel.getOpponentScore">
            <summary>
            Getter for opponent score
            </summary>
            <returns></returns>
        </member>
        <member name="M:BC.BoggleClientModel.setOpponentScore(System.String)">
            <summary>
            Setter for opponent score
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:BC.BoggleClientModel.#ctor">
            <summary>
            Constructor creates a BoggleClientModel
            </summary>
        </member>
        <member name="M:BC.BoggleClientModel.Connect(System.String)">
            <summary>
            Connect to the server at the given hostname and port and with the give name.
            </summary>
        </member>
        <member name="M:BC.BoggleClientModel.SendPlayerName(System.String)">
            <summary>
            Sends the players's name from the client to the server
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:BC.BoggleClientModel.SendWord(System.String)">
            <summary>
            Sends a boggle word from the client to the server
            </summary>
            <param name="word"></param>
        </member>
        <member name="M:BC.BoggleClientModel.LineReceived(System.String,System.Exception,System.Object)">
            <summary>
            Handles an arriving line of text, received from the BoggleServer.
            </summary>
            <param name="s"></param>
            <param name="e"></param>
            <param name="p"></param>
        </member>
        <member name="M:BC.BoggleClientModel.Disconnect">
            <summary>
            Disconnects the client from the boggle server, closes the socket connection
            </summary>
        </member>
        <member name="E:BC.BoggleClientModel.ConnectionEvent">
            <summary>
            Event to handle when the server receives a new connection.
            Boolean is true if connection is successful, false if not.
            </summary>
        </member>
        <member name="E:BC.BoggleClientModel.StartLineEvent">
            <summary>
            Event for when a START line is received from the server
            </summary>
        </member>
        <member name="E:BC.BoggleClientModel.TimeLineEvent">
            <summary>
            Event for when a TIME line is received from the server
            </summary>
        </member>
        <member name="E:BC.BoggleClientModel.ScoreLineEvent">
            <summary>
            Event for when a SCORE line is received from the server
            </summary>
        </member>
        <member name="E:BC.BoggleClientModel.StopLineEvent">
            <summary>
            Event for when a STOP line is received from the server
            </summary>
        </member>
        <member name="E:BC.BoggleClientModel.TerminatedLineEvent">
            <summary>
            Event for when a TERMINATED line is received from the server
            </summary>
        </member>
        <member name="E:BC.BoggleClientModel.IgnoreLineEvent">
            <summary>
            Event for when a IGNORING line is received from the server
            </summary>
        </member>
    </members>
</doc>
