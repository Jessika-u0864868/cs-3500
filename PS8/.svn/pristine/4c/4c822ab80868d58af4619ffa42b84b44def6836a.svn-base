using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using CustomNetworking;
using System.Net.Sockets;

namespace BoggleServer
{
    /// <summary>
    /// This program creates the server side of our Boggle game. Update
    /// </summary>
    /// <author>Basil Vetas, Lance Petersen</author>
    /// <date>November 18, 2014</date>
    class BoggleServer
    {
        // Listens for incoming connections
        private TcpListener server;

        // One StringSocket per connected client
        private List<StringSocket> allSockets;

        // the name associated with the socket
        private List<string> user_names;

        /// <summary>
        /// Will set up the Boggle Server
        /// </summary>
        /// <param name="args"></param>
        static void Main(string[] args)
        {
            if (args.Length == 3)
            {

            }
                new BoggleServer((int)args.GetValue(0), args.GetValue(1), args.GetValue(2));

        }

        /// <summary>
        /// Calls the 3 parameter constructor with null for the last parameter.
        /// </summary>
        /// <param name="timer"></param>
        /// <param name="pathname"></param>
        public BoggleServer (int timer, string pathname) : this(timer, pathname, null)
        {
        }

        /// <summary>
        /// Create a Boggle Server.
        /// </summary>
        /// <param name="timer"></param>
        /// <param name="pathname"></param>
        /// <param name="initBoggleBoard"></param>
        public BoggleServer (int timer, string pathname, string initBoggleBoard)
        {

        }
    }
}
