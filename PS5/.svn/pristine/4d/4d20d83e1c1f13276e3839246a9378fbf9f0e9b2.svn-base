using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using SS;
using SpreadsheetUtilities;
using System.Collections.Generic;

namespace SpreadsheetTests
{
    /// <summary>
    /// Test class for PS5. This class does not include any of the tests used in PS4. I assume
    /// that the implementation of PS4 used in Spreadsheet passes 100% of the grading tests for PS4,
    /// which is true because I have made all necessary corrections to my PS4 assignment. 
    /// </summary>
    /// <author>Basil Vetas</author>
    /// <date>10-6-2014</date>
    [TestClass]
    public class SpreadsheetTests
    {
        // --------- Exception Tests ------------ //

        /// <summary>
        ///     Tests if cell name for GetCellValue is null
        /// </summary>
        [TestMethod]
        [ExpectedException(typeof(InvalidNameException))]
        public void TestMethod1()
        {
            Spreadsheet sheet = new Spreadsheet();
            sheet.GetCellValue(null);
        }

        /// <summary>
        ///     Tests if cell name for GetCellValue is invalid
        /// </summary>
        [TestMethod]
        [ExpectedException(typeof(InvalidNameException))]
        public void TestMethod2()
        {
            Spreadsheet sheet = new Spreadsheet();
            object value = sheet.GetCellValue("1$#*&%1");
        }

        // --------- Non-Exception Tests ------------ //

        /// <summary>
        ///     Tests GetCellValue, expects a string given a string.
        ///     Also tests SetContentsOfCell given a string.
        /// </summary>
        [TestMethod]
        public void TestMethod3()
        {
            Spreadsheet sheet = new Spreadsheet();
            sheet.SetContentsOfCell("A1", "hello");
            object value = sheet.GetCellValue("A1");
            Assert.AreEqual("hello", value);
        }

        /// <summary>
        ///     Tests GetCellValue, expected a double given a double.
        ///     Also tests SetContentsOfCell given a double (as a string).
        /// </summary>
        [TestMethod]
        public void TestMethod4()
        {
            Spreadsheet sheet = new Spreadsheet();
            sheet.SetContentsOfCell("A1", "5");
            object value = sheet.GetCellValue("A1");
            Assert.AreEqual(5.0, value);
        }

        /// <summary>
        ///     Tests GetCellValue, expects a double given a formula.
        ///     Also tests SetContentsOfCell given a formula (as a string).
        /// </summary>
        [TestMethod]
        public void TestMethod5()
        {
            Spreadsheet sheet = new Spreadsheet();
            sheet.SetContentsOfCell("A1", "B1 + C1");
            sheet.SetContentsOfCell("B1", "1");
            sheet.SetContentsOfCell("C1", "2");
            object value = sheet.GetCellValue("A1");
            Assert.AreEqual(3.0, value);
        }

        /// <summary>
        ///     Tests GetCellValue, expects a SpreadsheetUtilities.FormulaError given a formula.
        ///     Also tests SetContentsOfCell given a formula (as a string). 
        /// </summary>
        [TestMethod]
        public void TestMethod6()
        {
            Spreadsheet sheet = new Spreadsheet();
            sheet.SetContentsOfCell("A1", "B1 + C1");
            object value = sheet.GetCellValue("A1");
            Assert.AreEqual(new FormulaError(), value);
        }
      
 
    }
}
